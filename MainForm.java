package ocr;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.parser.PdfTextExtractor;
import java.io.FileOutputStream;
import java.io.OutputStream;
import javax.swing.filechooser.FileFilter;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author admin
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        jButton_Save.setVisible(false);
        btn_GetText.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_SelectImage = new javax.swing.JLabel();
        jLabel_ImagePath = new javax.swing.JLabel();
        btn_attach = new javax.swing.JButton();
        jPanel_RetriveText = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane_ImageText = new javax.swing.JTextPane();
        jButton_Save = new javax.swing.JButton();
        btn_GetText = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OCR");
        setName("Mainform"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Scan"));
        jPanel1.setName("jPanel_Scan"); // NOI18N

        jLabel_SelectImage.setText("Select Image :");

        jLabel_ImagePath.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_ImagePath.setText("No Image Selected");

        btn_attach.setText("attach");
        btn_attach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_attachActionPerformed(evt);
            }
        });

        jPanel_RetriveText.setBorder(javax.swing.BorderFactory.createTitledBorder("Retrive Text"));

        jTextPane_ImageText.setEditable(false);
        jScrollPane1.setViewportView(jTextPane_ImageText);

        jButton_Save.setText("Save");
        jButton_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_RetriveTextLayout = new javax.swing.GroupLayout(jPanel_RetriveText);
        jPanel_RetriveText.setLayout(jPanel_RetriveTextLayout);
        jPanel_RetriveTextLayout.setHorizontalGroup(
            jPanel_RetriveTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_RetriveTextLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_RetriveTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                    .addGroup(jPanel_RetriveTextLayout.createSequentialGroup()
                        .addComponent(jButton_Save)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel_RetriveTextLayout.setVerticalGroup(
            jPanel_RetriveTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_RetriveTextLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_Save)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_GetText.setText("Get Text");
        btn_GetText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GetTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_ImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_SelectImage, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_attach))
                    .addComponent(btn_GetText))
                .addGap(18, 18, 18)
                .addComponent(jPanel_RetriveText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_SelectImage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_attach))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_ImagePath, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btn_GetText))
                    .addComponent(jPanel_RetriveText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(140, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String sourceimgname = null;

    public ImageIcon ResizeImage(String imgpath) {
        ImageIcon myimg = new ImageIcon(imgpath);
        Image img = myimg.getImage();
        Image newimg = img.getScaledInstance(jLabel_ImagePath.getWidth(), jLabel_ImagePath.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newimg);
        return image;
    }
    private void btn_attachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_attachActionPerformed
        JFileChooser imagechooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG Images", "png");
        imagechooser.setFileFilter(filter);
        imagechooser.removeChoosableFileFilter(imagechooser.getAcceptAllFileFilter());
        int returnval = imagechooser.showOpenDialog(jPanel1);
        if (returnval == JFileChooser.APPROVE_OPTION) {
            File f = imagechooser.getSelectedFile();
            String path = f.getAbsolutePath();
            sourceimgname = f.getName();
            jLabel_ImagePath.setIcon(ResizeImage(path));
            btn_GetText.setVisible(true);
        } else if (returnval == JFileChooser.CANCEL_OPTION) {
            jLabel_ImagePath.setIcon(null);
            jLabel_ImagePath.setText("No Image Selected");
            btn_GetText.setVisible(false);
            jButton_Save.setVisible(false);
            jTextPane_ImageText.setText(" ");
        }
    }//GEN-LAST:event_btn_attachActionPerformed

    private void btn_GetTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GetTextActionPerformed
        try {
            String cmd = "E:\\Sem-5 Project\\OpenCV_3_KNN_Character_Recognition_Python\\";           
            String py = "TrainAndTest";
            ProcessBuilder pb = new ProcessBuilder("python", py + ".py", sourceimgname);
            pb.directory(new File(cmd));
            pb.redirectError();
            Process proc = pb.start();
            BufferedReader stdInput = new BufferedReader(new InputStreamReader(proc.getInputStream()));
            BufferedReader stdError = new BufferedReader(new InputStreamReader(proc.getErrorStream()));

            // read the output from the command
            System.out.println("Here is the standard output of the command:\n");
            String s = " ";
            String txt = " ";
            while ((s = stdInput.readLine()) != null) {
                txt += s;
                System.out.println(s);

            }
            //System.out.println("txt="+txt);
            jTextPane_ImageText.setText(txt);
            //            String imageText = jTextPane_ImageText.getText();
            // btn_save.setVisible(!jTextPane_ImageText.getText().isEmpty());

            jButton_Save.setVisible(!jTextPane_ImageText.getText().isEmpty());
            // read any errors from the attempted command
            System.out.println("Here is the standard error of the command (if any):\n");
            while ((s = stdError.readLine()) != null) {
                System.out.println(s);
            }
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_GetTextActionPerformed

    private void jButton_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SaveActionPerformed
        
                String content = jTextPane_ImageText.getText();
                if (content.isEmpty()) {
					JOptionPane.showMessageDialog(null, "No Content", "InfoBox: " + "Invalid",
							JOptionPane.INFORMATION_MESSAGE);
				} else {
					JFrame parentFrame = new JFrame();
					JFileChooser jfilechoose = new JFileChooser();
					jfilechoose.setDialogTitle("Save a File");
					jfilechoose.addChoosableFileFilter(new FileNameExtensionFilter("Text Files", "txt"));
					jfilechoose.addChoosableFileFilter(new FileNameExtensionFilter("Pdf Files", "pdf"));
	
                                        int userSelection = jfilechoose.showSaveDialog(parentFrame);
					if (userSelection == JFileChooser.APPROVE_OPTION) {
						File fileToSave = jfilechoose.getSelectedFile();
						FileFilter fileFilter = jfilechoose.getFileFilter();
						String fileExtension = fileFilter.getDescription();
						if (fileExtension.equals("Text Files")) {
							try {
								FileWriter fw = new FileWriter(fileToSave.getPath());
								fw.write(content);
								System.out.println("File created..");
								fw.flush();
								fw.close();
							} catch (Exception exception) {
								JOptionPane.showMessageDialog(null, exception.getMessage());
							}
						} else if (fileExtension.equals("Pdf Files")) {
							try {
								// Create Document instance.
								Document document = new Document();
								// Create OutputStream instance.
								OutputStream outputStream = new FileOutputStream(fileToSave);
								// Create PDFWriter instance.
								PdfWriter.getInstance(document, outputStream);
								// Open the document.
								document.open();
								// Add content to the document.
								document.add(new Paragraph(content));
								// Close document and outputStream.
								document.close();
								outputStream.close();
								JOptionPane.showMessageDialog(null, "PDF created successfully");
								System.out.println("Pdf created successfully.");
							} catch (Exception exception) {
								exception.printStackTrace();
							}
						}
					}
				}
	        
    }//GEN-LAST:event_jButton_SaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {

            new MainForm().setVisible(true);

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_GetText;
    private javax.swing.JButton btn_attach;
    private javax.swing.JButton jButton_Save;
    private javax.swing.JLabel jLabel_ImagePath;
    private javax.swing.JLabel jLabel_SelectImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_RetriveText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane_ImageText;
    // End of variables declaration//GEN-END:variables
}
